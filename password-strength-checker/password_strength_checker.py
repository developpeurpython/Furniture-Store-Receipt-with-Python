# -*- coding: utf-8 -*-
"""password_strength_checker.ipynb

Automatically generated by Colaboratory.

# **1. Install Required Packages**
"""

!pip install pandas
!pip install scikit-learn

"""# **2. Import the File to Google Colab**"""

from google.colab import files
uploaded = files.upload()

"""# **3. Read the Uncleaned CSV File**"""

import pandas as pd
import io

df_original = pd.read_csv(io.BytesIO(uploaded['password_strength_classifier.csv']), on_bad_lines='skip')
print(df_original.head())

"""# **4. Clean the CSV File, Replace Values in the Strength Column, and Save the Cleaned File**"""

df_cleaned = df_original.drop_duplicates()
df_cleaned.dropna(inplace=True)
df_cleaned["strength"] = df_cleaned["strength"].replace({0: "weak", 1: "medium", 2: "strong"})
df_cleaned.to_csv("password_strength_classifier_cleaned.csv", index=False)
print(df_cleaned.head())

"""# **5. Load the Cleaned CSV File into a DataFrame**"""

import pandas as pd
df = pd.read_csv("password_strength_classifier_cleaned.csv")

"""# **6. Prepare Data for Learning**"""

from sklearn.feature_extraction.text import TfidfVectorizer
vectorizer = TfidfVectorizer(analyzer='char', ngram_range=(1,3))
X = vectorizer.fit_transform(df['password'])
y = df['strength']

"""# **7. Split Data into Training and Testing Sets**"""

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

"""# **8. Train a Machine Learning Model**"""

from sklearn.ensemble import RandomForestClassifier
model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

"""# **9. Evaluate Model Performance on the Test Set**"""

from sklearn.metrics import accuracy_score
y_pred = model.predict(X_test)
accuracy = accuracy_score(y_test, y_pred)
print("Accuracy:", accuracy)

"""# **10. Use the Trained Model to Predict Password Strength**"""

passwords = ["123456", "password", "p@ssw0rd", "myverystrongpassword123!"]
passwords_transformed = vectorizer.transform(passwords)
passwords_pred = model.predict(passwords_transformed)
print("Predictions:", passwords_pred)