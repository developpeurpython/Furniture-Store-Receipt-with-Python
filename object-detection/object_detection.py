# -*- coding: utf-8 -*-
"""object_detection.ipynb

Automatically generated by Colaboratory.

# **1. This code installs cvlib, opencv-python-headless, and matplotlib packages.**
"""

!pip install cvlib
!pip install opencv-python-headless
!pip install matplotlib

"""# **2. Code for object detection using cvlib and displaying results using matplotlib.**"""

import cv2
import numpy as np
import matplotlib.pyplot as plt
import cvlib as cv
from cvlib.object_detection import draw_bbox

# Load image
image = cv2.imread("cars.jpg")

# Check if image is loaded successfully
if image is None:
    print("Could not read input image")
else:
    # Detect objects in the image with a confidence level of 0.5 using Faster R-CNN
    bbox, label, conf = cv.detect_common_objects(image, model='faster_rcnn', confidence=0.5)

    # Create a copy of the original image to draw rectangles and apply effect of highlight
    highlighted_image = np.copy(image)

    # Draw rectangles around the detected objects using draw_bbox() function
    output = draw_bbox(highlighted_image, bbox, label, conf)

    # Create a figure to display the original image and image with detected objects
    fig, ax = plt.subplots(1, 2, figsize=(12, 6))

    ax[0].imshow(cv2.cvtColor(image, cv2.COLOR_BGR2RGB))
    ax[0].set_title("Original Image", fontsize=14, color="blue", fontweight="bold", pad=10)
    ax[0].set_xticks([])
    ax[0].set_yticks([])
    ax[0].spines['top'].set_visible(False)
    ax[0].spines['right'].set_visible(False)
    ax[0].spines['bottom'].set_visible(False)
    ax[0].spines['left'].set_visible(False)

    ax[1].imshow(cv2.cvtColor(output, cv2.COLOR_BGR2RGB))
    ax[1].set_title("Detected Cars (" + str(label.count('car')) + ")", fontsize=14, color="blue", fontweight="bold", pad=10)
    ax[1].set_xticks([])
    ax[1].set_yticks([])
    ax[1].spines['top'].set_visible(False)
    ax[1].spines['right'].set_visible(False)
    ax[1].spines['bottom'].set_visible(False)
    ax[1].spines['left'].set_visible(False)

    # Adjust subplot parameters to give space for title
    plt.subplots_adjust(top=0.85, bottom=0.15)

    # Display the figure with a border and legend
    fig.suptitle("Car Detection using Faster R-CNN", fontsize=20, color="blue", fontweight="bold", y=0.98)
    fig.patch.set_edgecolor('black')
    fig.patch.set_linewidth(2)

    # Show the figure
    plt.show()